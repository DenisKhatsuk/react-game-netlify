{"version":3,"sources":["components/app-logo/index.js","components/app-logo/app-logo.js","components/app-header/index.js","components/app-header/app-header.js","components/board-field/index.js","components/board-field/board-field.js","components/info-panel/index.js","components/info-panel/info-panel.js","components/buttons-block/index.js","components/buttons-block/buttons-block.js","components/toggles-block/index.js","components/toggles-block/toggles-block.js","components/winning-line/index.js","components/winning-line/winning-line.js","components/game-board/index.js","components/game-board/game-board.js","components/app-main/index.js","components/app-main/app-main.js","components/social-icons/index.js","components/social-icons/social-icons.js","components/rsschool-logo/index.js","components/rsschool-logo/rsschool-logo.js","components/app-footer/index.js","components/app-footer/app-footer.js","components/react-game-app/index.js","components/react-game-app/react-game-app.js","index.js"],"names":["AppLogo","className","src","alt","Header","BoardField","state","value","props","isEmpty","clickHandler","onSelect","row","column","isPlaying","setState","onClick","this","Component","InfoPanel","message","ButtonsBlock","type","TogglesBlock","onPlayerChange","playerState","useState","playerChecked","setPlayerChecked","nightModeChecked","setNightModeChecked","fullscreenChecked","setFullscreenChecked","onChange","nextChecked","checked","onColor","onHandleColor","offColor","offHandleColor","checkedIcon","style","display","justifyContent","alignItems","height","fontSize","fontWeight","color","paddingRight","document","getElementById","classList","toggle","element","cancelFullScreen","mozCancelFullScreen","webkitCancelFullScreen","requestFullScreen","mozRequestFullScreen","webkitRequestFullScreen","WinningLine","line","x1","y1","x2","y2","classes","visibility","width","GameBoard","board","winner","currentPlayer","startingPlayer","idCounter","winningLines","winningLine","drawLine","idx","setInitialGameState","toggleCurrentPlayer","toggleStartingPlayer","stopGame","winMessage","makeMove","newBoard","resultCheck","i","j","autoplay","availableFields","push","makeRandomMove","randomIndex","Math","floor","random","length","splice","randomField","setTimeout","settingsListener","button","gameBoard","map","rowIndex","columnIndex","AppMain","SocialIcons","href","target","rel","RSschoolLogo","AppFooter","ReactGameApp","ReactDOM","render"],"mappings":"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","file":"static/js/main.9d3fb76d.chunk.js","sourcesContent":["import AppLogo from './app-logo';\n\nexport default AppLogo;\n","import React from 'react';\nimport './app-logo.scss';\n\nconst AppLogo = () => {\n  return (\n    <div className = \"app-logo\">\n      <img className = \"app-logo__img\" src=\"./img/logo.png\" alt=\"App logo\"/>\n    </div>\n  );\n};\n\nexport default AppLogo;\n","import Header from './app-header';\n\nexport default Header;\n","import React from 'react';\nimport './app-header.scss';\nimport AppLogo from '../app-logo';\n\nconst AppHeader = () => {\n  return (\n    <header className=\"app-header\">\n      <AppLogo />\n    </header>\n  );\n};\n\nexport default AppHeader;\n","import BoardField from './board-field';\n\nexport default BoardField;\n","import React, { Component } from 'react';\nimport './board-field.scss';\n\nexport default class BoardField extends Component {\n  state = {\n    value: this.props.value,\n    isEmpty: true,\n  };\n\n  clickHandler = () => {\n    const {\n      onSelect,\n      row,\n      column,\n      value,\n      isPlaying,\n    } = this.props;\n    const { isEmpty } = this.state;\n    if (isPlaying && isEmpty) {\n      this.setState({\n        value,\n        isEmpty: false,\n      });\n      onSelect(row, column);\n    }\n  };\n\n  render() {\n    return (\n      <div\n        className = \"board-field\"\n        onClick = { this.clickHandler }>\n          { this.state.value }\n      </div>\n    );\n  }\n}\n","import InfoPanel from './info-panel';\n\nexport default InfoPanel;\n","import React from 'react';\nimport './info-panel.scss';\n\nconst InfoPanel = ({ message }) => {\n  return (\n    <div className = \"info-panel\">\n      { message }\n    </div>\n  );\n};\n\nexport default InfoPanel;\n","import ButtonsBlock from './buttons-block';\n\nexport default ButtonsBlock;\n","import React from 'react';\nimport './buttons-block.scss';\n\nconst ButtonsBlock = ({ onSelect }) => {\n  return (\n    <div className = 'buttons-block'>\n      <button type='button'\n              className='btn btn-outline-info btn-lg btn-block'\n              onClick = { () => onSelect('Autoplay') }>\n                Autoplay\n      </button>\n      <button type='button'\n              className='btn btn-outline-secondary btn-lg btn-block'\n              onClick = { () => onSelect('Statistics') }>\n                Statistics\n      </button>\n      <button type='button'\n              className='btn btn-outline-primary btn-lg btn-block'\n              onClick = { () => onSelect('NewGame') }>\n                New Game\n      </button>\n    </div>\n  );\n};\n\nexport default ButtonsBlock;\n","import TogglesBlock from './toggles-block';\n\nexport default TogglesBlock;\n","import React, { useState } from 'react';\nimport './toggles-block.scss';\nimport Switch from 'react-switch';\n\nconst TogglesBlock = ({ onPlayerChange, playerState }) => {\n  const [playerChecked, setPlayerChecked] = useState(playerState);\n  const [nightModeChecked, setNightModeChecked] = useState(false);\n  const [fullscreenChecked, setFullscreenChecked] = useState(false);\n\n  const handlePlayerChange = (nextChecked) => {\n    setPlayerChecked(nextChecked);\n    onPlayerChange();\n  };\n\n  const handleNightModeChange = (nextChecked) => {\n    setNightModeChecked(nextChecked);\n    document.getElementById('root').classList.toggle('night-mode');\n  };\n\n  const launchFullScreen = (element) => {\n    if (element.requestFullScreen) {\n      element.requestFullScreen();\n    } else if (element.mozRequestFullScreen) {\n      element.mozRequestFullScreen();\n    } else if (element.webkitRequestFullScreen) {\n      element.webkitRequestFullScreen();\n    }\n  };\n\n  const cancelFullscreen = () => {\n    if (document.cancelFullScreen) {\n      document.cancelFullScreen();\n    } else if (document.mozCancelFullScreen) {\n      document.mozCancelFullScreen();\n    } else if (document.webkitCancelFullScreen) {\n      document.webkitCancelFullScreen();\n    }\n  };\n\n  const handleFullscreenChange = (nextChecked) => {\n    setFullscreenChecked(nextChecked);\n    if (!fullscreenChecked) {\n      launchFullScreen(document.getElementById('root'));\n    } else {\n      cancelFullscreen();\n    }\n  };\n\n  return (\n    <div className = 'toggles-block'>\n      <label className = 'toggles-block__toggle'>\n        <span>First player</span>\n        <Switch\n          onChange = { handlePlayerChange }\n          checked = { playerChecked }\n          className = 'react-switch'\n          onColor = '#86d3ff'\n          onHandleColor = '#2693e6'\n          offColor = '#86d3ff'\n          offHandleColor = '#2693e6'\n          checkedIcon = {\n            <div\n              style={{\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n                height: '100%',\n                fontSize: 18,\n                fontWeight: 'bold',\n                color: '#ffffff',\n                paddingRight: 2,\n              }}\n            >\n              O\n            </div>\n          }\n        />\n      </label>\n      <label className = 'toggles-block__toggle'>\n        <span>Night Mode</span>\n        <Switch\n          onChange = { handleNightModeChange }\n          checked = { nightModeChecked }\n          className = 'react-switch'\n          onColor = '#86d3ff'\n          onHandleColor = '#2693e6'\n        />\n      </label>\n      <label className = 'toggles-block__toggle'>\n        <span>Fullscreen</span>\n        <Switch\n          onChange = { handleFullscreenChange }\n          checked = { fullscreenChecked }\n          className = 'react-switch'\n          onColor = '#86d3ff'\n          onHandleColor = '#2693e6'\n        />\n      </label>\n    </div>\n  );\n};\n\nexport default TogglesBlock;\n","import WinningLine from './winning-line';\n\nexport default WinningLine;\n","import React from 'react';\nimport './winning-line.scss';\n\nconst WinningLine = ({ line: [[x1, y1], [x2, y2]], visibility }) => {\n  const classes = visibility ? 'winning-line' : 'winning-line d-none';\n  return (\n    <svg className = { classes } height='300' width='300'>\n      <line\n        className = 'winning-line__line'\n        x1 = { x1 }\n        y1 = { y1 }\n        x2 = { x2 }\n        y2 = { y2 }\n      ></line>\n    </svg>\n  );\n};\n\nexport default WinningLine;\n","import GameBoard from './game-board';\n\nexport default GameBoard;\n","import React, { Component } from 'react';\nimport './game-board.scss';\nimport BoardField from '../board-field';\nimport InfoPanel from '../info-panel';\nimport ButtonsBlock from '../buttons-block';\nimport TogglesBlock from '../toggles-block';\nimport WinningLine from '../winning-line';\n\nexport default class GameBoard extends Component {\n  state = {\n    board: [\n      ['', '', ''],\n      ['', '', ''],\n      ['', '', ''],\n    ],\n    isPlaying: true,\n    winner: '',\n    message: 'Let\\'s play!',\n  };\n\n  currentPlayer = 'X';\n\n  startingPlayer = 'X';\n\n  idCounter = 0;\n\n  winningLines = [\n    [[0, 0], [0, 0]],\n    [[10, 50], [290, 50]],\n    [[10, 150], [290, 150]],\n    [[10, 250], [290, 250]],\n    [[50, 10], [50, 290]],\n    [[150, 10], [150, 290]],\n    [[250, 10], [250, 290]],\n    [[10, 10], [290, 290]],\n    [[10, 290], [290, 10]],\n  ];\n\n  winningLine = this.winningLines[0];\n\n  drawLine = (idx) => {\n    this.winningLine = this.winningLines[idx];\n  }\n\n  setInitialGameState = () => {\n    this.setState({\n      board: [\n        ['', '', ''],\n        ['', '', ''],\n        ['', '', ''],\n      ],\n      isPlaying: true,\n      winner: '',\n      message: 'Let\\'s play!',\n    });\n    this.currentPlayer = this.startingPlayer;\n  };\n\n  toggleCurrentPlayer = () => {\n    this.currentPlayer = this.currentPlayer === 'O' ? 'X' : 'O';\n  };\n\n  toggleStartingPlayer = () => {\n    this.startingPlayer = this.startingPlayer === 'O' ? 'X' : 'O';\n    this.setInitialGameState();\n  };\n\n  stopGame = (winner) => {\n    const winMessage = `Player ${winner} won!`;\n    const tieMessage = 'Tie!';\n    this.setState({\n      isPlaying: false,\n      winner,\n    }, () => {\n      this.setState({\n        message: winner ? winMessage : tieMessage,\n      });\n    });\n    this.drawLine(1);\n  };\n\n  makeMove = (row, column) => {\n    this.setState(({ board }) => {\n      const newBoard = [...board];\n      newBoard[row][column] = this.currentPlayer;\n      return {\n        board: newBoard,\n      };\n    }, () => {\n      this.resultCheck();\n      this.toggleCurrentPlayer();\n      this.setState({\n        message: `It's player ${this.currentPlayer} turn.`,\n      });\n    });\n  };\n\n  resultCheck = () => {\n    const { board } = this.state;\n    // horizontal check\n    for (let i = 0; i < 3; i++) {\n      if (board[i][0] && board[i][0] === board[i][1] && board[i][1] === board[i][2]) {\n        const winner = board[i][0];\n        this.stopGame(winner);\n        this.drawLine(i + 1);\n        return;\n      }\n    }\n    // vertical check\n    for (let i = 0; i < 3; i++) {\n      if (board[0][i] && board[0][i] === board[1][i] && board[1][i] === board[2][i]) {\n        const winner = board[0][i];\n        this.stopGame(winner);\n        this.drawLine(i + 4);\n        return;\n      }\n    }\n    // diagonal check\n    if (board[0][0] && board[0][0] === board[1][1] && board[1][1] === board[2][2]) {\n      const winner = board[0][0];\n      this.stopGame(winner);\n      this.drawLine(7);\n      return;\n    }\n    if (board[0][2] && board[0][2] === board[1][1] && board[1][1] === board[2][0]) {\n      const winner = board[0][2];\n      this.stopGame(winner);\n      this.drawLine(8);\n      return;\n    }\n    // Tie check\n    for (let i = 0; i < 3; i++) {\n      for (let j = 0; j < 3; j++) {\n        if (!board[i][j]) return;\n      }\n    }\n    this.stopGame(null);\n    this.drawLine(0);\n  };\n\n  autoplay = () => {\n    this.setState({\n      board: [\n        ['', '', ''],\n        ['', '', ''],\n        ['', '', ''],\n      ],\n      isPlaying: true,\n      winner: '',\n      message: 'Let\\'s play!',\n    }, () => {\n      const availableFields = [];\n      for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < 3; j++) {\n          availableFields.push([i, j]);\n        }\n      }\n      const makeRandomMove = () => {\n        if (this.state.isPlaying) {\n          const randomIndex = Math.floor(Math.random() * (availableFields.length + 1));\n          const [randomField] = availableFields.splice(randomIndex - 1, 1);\n          const [row, column] = randomField;\n          this.setState(({ board }) => {\n            const newBoard = [...board];\n            newBoard[row][column] = this.currentPlayer;\n            return {\n              board: newBoard,\n            };\n          }, () => {\n            this.resultCheck();\n            this.toggleCurrentPlayer();\n            this.setState({\n              message: `It's player ${this.currentPlayer} turn.`,\n            });\n            if (availableFields.length) setTimeout(makeRandomMove, 1000);\n          });\n        }\n      };\n      makeRandomMove();\n    });\n  };\n\n  onSelect = (row, column) => {\n    if (this.state.board[row][column]) return;\n    this.makeMove(row, column);\n  };\n\n  settingsListener = (button) => {\n    switch (button) {\n      case 'Autoplay':\n        this.autoplay();\n        break;\n      case 'Statistics':\n        break;\n      case 'NewGame':\n        this.setInitialGameState();\n        break;\n      default:\n        break;\n    }\n  };\n\n  render() {\n    this.settingsListener();\n    const { board, isPlaying } = this.state;\n    const gameBoard = board.map((row, rowIndex) => {\n      return (\n        <div\n        key = { this.idCounter++ }\n        className = \"board-row\">\n            { row.map((column, columnIndex) => {\n              return (<BoardField\n                        key = { this.idCounter++ }\n                        row = { rowIndex }\n                        column = { columnIndex }\n                        onSelect = { this.onSelect }\n                        value = { column }\n                        isPlaying = { isPlaying }/>);\n            })\n            }\n        </div>\n      );\n    });\n    return (\n      <div className = \"game-board\">\n        <section className = \"game-field\">\n          <InfoPanel message = { this.state.message }/>\n          <WinningLine\n            line = { this.winningLine }\n            visibility = { !this.state.isPlaying }\n          />\n          { gameBoard }\n        </section>\n        <section className = \"game-settings\">\n          <TogglesBlock\n            onPlayerChange = { this.toggleStartingPlayer }\n            playerState = { this.startingPlayer === 'O' }\n          />\n          <ButtonsBlock onSelect = { this.settingsListener }/>\n        </section>\n      </div>\n    );\n  }\n}\n","import AppMain from './app-main';\n\nexport default AppMain;\n","import React from 'react';\nimport './app-main.scss';\nimport GameBoard from '../game-board';\n\nconst AppMain = () => {\n  return (\n    <main className=\"app-main\">\n      <GameBoard />\n    </main>\n  );\n};\n\nexport default AppMain;\n","import SocialIcons from './social-icons';\n\nexport default SocialIcons;\n","import React from 'react';\nimport './social-icons.scss';\n\nconst githubLink = 'https://github.com/DenisKhatsuk';\nconst youtubeLink = 'https://github.com/DenisKhatsuk';\n\nconst SocialIcons = () => {\n  return (\n    <div className = \"social-icons\">\n      <a href={ githubLink } target = \"_blank\" rel = \"noreferrer\">\n        <i className = \"fa fa-github fa-3x\"></i>\n      </a>\n      <a href={ youtubeLink } target = \"_blank\" rel = \"noreferrer\">\n        <i className = \"fa fa-youtube fa-3x\"></i>\n      </a>\n    </div>\n  );\n};\n\nexport default SocialIcons;\n","import RSschoolLogo from './rsschool-logo';\n\nexport default RSschoolLogo;\n","import React from 'react';\nimport './rsschool-logo.scss';\n\nconst RSschoolLogo = () => {\n  return (\n    <img src=\"./img/rsschool-logo.png\" alt=\"RS School logo\" className = \"rsschool-logo\"/>\n  );\n};\n\nexport default RSschoolLogo;\n","import AppFooter from './app-footer';\n\nexport default AppFooter;\n","import React from 'react';\nimport './app-footer.scss';\nimport SocialIcons from '../social-icons';\nimport RSschoolLogo from '../rsschool-logo';\n\nconst rsschoolLink = 'https://rs.school/react/';\n\nconst AppFooter = () => {\n  return (\n    <footer className=\"app-footer\">\n      <div className = \"app-footer__details\">\n        <span className = \"app-footer__year\">2021</span>\n        <div className = \"app-footer__logo\">\n          <a href={ rsschoolLink } target = \"_blank\" rel = \"noreferrer\">\n            <RSschoolLogo />\n          </a>\n        </div>\n      </div>\n      <div className = \"app-footer__icons\">\n        <SocialIcons />\n      </div>\n    </footer>\n  );\n};\n\nexport default AppFooter;\n","import ReactGameApp from './react-game-app';\n\nexport default ReactGameApp;\n","import React, { Component } from 'react';\nimport AppHeader from '../app-header';\nimport AppMain from '../app-main';\nimport AppFooter from '../app-footer';\nimport './react-game-app.scss';\n\nexport default class ReactGameApp extends Component {\n  render() {\n    return (\n      <div className = \"react-game-app\">\n        <AppHeader />\n        <AppMain />\n        <AppFooter />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ReactGameApp from './components/react-game-app';\nimport './scss/styles.scss';\n\nReactDOM.render(<ReactGameApp />,\n  document.getElementById('root'));\n"],"sourceRoot":""}